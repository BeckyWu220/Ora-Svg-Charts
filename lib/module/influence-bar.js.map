{"version":3,"sources":["influence-bar.tsx"],"names":["React","View","Text","StyleSheet","palette","InfluenceBar","props","influence","range","color","gray_200","height","backgroundColor","gray_300","highlightedPercentage","Math","abs","offset","initialMarkPosition","x","y","width","zeroMarkerPosition","setZeroMarkerPosition","useState","valueMarkerPosition","setValueMarkerPosition","zeroMarker","useRef","highlightedBar","useEffect","current","measure","style","flexGrow","borderRadius","overflow","position","top","bottom","left","right","gray_500","styles","markerTextContainer","markerText","zeroMarkerText","create","gray_400","fontWeight","alignItems"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { palette } from './colors';\n\nexport interface InfluenceBarProps {\n  color?: string,\n  backgroundColor?: string,\n  influence: number,\n  range: number,\n  height?: number,\n  style?: object\n}\n\nexport default function InfluenceBar(props: InfluenceBarProps) {\n\n  const { influence = 0, range = 100, color = palette.gray_200, height = 16, backgroundColor = palette.gray_300 } = props\n\n  const highlightedPercentage = `${Math.abs(influence) / (2 * Math.abs(range)) * 100}%`\n  \n  const offset = (Math.abs(range) - Math.abs(influence)) / 2 * Math.abs(range)\n\n  const initialMarkPosition = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  }\n\n  const [zeroMarkerPosition, setZeroMarkerPosition] = React.useState(initialMarkPosition)\n  const [valueMarkerPosition, setValueMarkerPosition] = React.useState(initialMarkPosition)\n\n  const zeroMarker = React.useRef()\n  const highlightedBar = React.useRef()\n\n  React.useEffect(() => {\n    zeroMarker.current.measure((x, y, width, height) => {\n      setZeroMarkerPosition({ x, y, width, height })\n    })\n    highlightedBar.current.measure((x, y, width, height) => {\n      setValueMarkerPosition({ x, y, width, height })\n    })\n  }, [influence])\n\n  return (\n    <View style={{ width: '100%', ...props.style }}>\n      <View style={{ \n          flexGrow: 1, \n          height, \n          backgroundColor, \n          borderRadius: 8, \n          overflow: 'hidden'\n        }}>\n        {/* Highlighted Bar */}\n        <View\n          ref={highlightedBar}\n          style={{\n            position: 'absolute', \n            top: 0, \n            bottom: 0, \n            backgroundColor: color,\n            left: influence < 0 ? (`${offset < 100 ? offset : 100}%`) : '50%', \n            right: influence > 0 ? `${offset < 100 ? offset : 100}%` : '50%', \n            width: highlightedPercentage \n          }}\n        />\n      </View>\n      {/* Zero Marker and Zero Marker Text */}\n      <View ref={zeroMarker} style={{ position: 'absolute', left: '50%', top: -props.height * 0.5 / 2, width: 2, height: props.height * 1.5, backgroundColor: palette.gray_500, overflow: 'visible' }}></View>\n      <View style={[styles.markerTextContainer, { left: zeroMarkerPosition.x - 10 }]}>\n        <Text style={[styles.markerText, styles.zeroMarkerText]}>0</Text>\n      </View>\n      {/* Influence Marker Text */}\n      <View style={[styles.markerTextContainer, { left: valueMarkerPosition.x - 10 + ( influence > 0 && valueMarkerPosition.width) }]}>\n        <Text style={styles.markerText}>{influence}</Text>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  zeroMarkerText: {\n    color: palette.gray_500\n  },\n  markerText: {\n    color: palette.gray_400,\n    fontWeight: 'bold'\n  },\n  markerTextContainer: {\n    position: 'absolute', \n    top: 14, \n    width: 20, \n    overflow: 'visible', \n    alignItems: 'center'\n  }\n})"]}
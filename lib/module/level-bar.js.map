{"version":3,"sources":["level-bar.tsx"],"names":["React","View","Text","StyleSheet","LevelBar","props","level","colors","height","style","container","useRef","barWidth","setBarWidth","useState","flexDirection","width","current","measure","x","y","map","color","index","styles","barContainer","length","bar","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","levelText","create","paddingHorizontal","flex","alignItems","justifyContent","fontWeight"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,QAAuC,cAAvC;AASA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AACrD,QAAM;AAAEC,IAAAA,KAAK,GAAG,CAAV;AAAaC,IAAAA,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAAtB;AAA+EC,IAAAA,MAAM,GAAG,EAAxF;AAA4FC,IAAAA;AAA5F,MAAsGJ,KAA5G;AAEA,QAAMK,SAAS,GAAGV,KAAK,CAACW,MAAN,EAAlB;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACc,QAAN,CAAe,CAAf,CAAhC;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEJ,SAAX;AAAsB,IAAA,KAAK;AAAIK,MAAAA,aAAa,EAAE,KAAnB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,OAA4CX,KAAK,CAACI,KAAlD,CAA3B;AAAsF,IAAA,QAAQ,EAAE,MAAM;AACpGC,MAAAA,SAAS,CAACO,OAAV,CAAkBC,OAAlB,CAA0B,CAACC,CAAD,EAAIC,CAAJ,EAAOJ,KAAP,EAAcR,MAAd,KAAyB;AACjDK,QAAAA,WAAW,CAACG,KAAD,CAAX;AACD,OAFD;AAGD;AAJD,KAKIT,MAAM,CAACc,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KACX,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAX;AAAkB,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,YAAR,EAAsB;AAAET,MAAAA,KAAK,EAAEJ,QAAQ,GAACL,MAAM,CAACmB,MAAzB;AAAiClB,MAAAA;AAAjC,KAAtB;AAAzB,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CACLgB,MAAM,CAACG,GADF,EAELJ,KAAK,GAAGjB,KAAR,GAAgB;AAAEsB,MAAAA,eAAe,EAAEN;AAAnB,KAAhB,GAA6C,IAFxC,EAGL;AACEO,MAAAA,mBAAmB,EAAEN,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,CAD1C;AAEEO,MAAAA,sBAAsB,EAAEP,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,CAF7C;AAGEQ,MAAAA,oBAAoB,EAAER,KAAK,KAAKhB,MAAM,CAACmB,MAAP,GAAgB,CAA1B,GAA+B,EAA/B,GAAoC,CAH5D;AAIEM,MAAAA,uBAAuB,EAAET,KAAK,KAAKhB,MAAM,CAACmB,MAAP,GAAgB,CAA1B,GAA8B,EAA9B,GAAmC;AAJ9D,KAHK;AADT,KAYIH,KAAK,KAAKjB,KAAK,GAAG,CAAlB,IACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEkB,MAAM,CAACS;AAApB,KAAgC3B,KAAhC,CAbJ,CADF,CADA,CALJ,CADF;AA6BD;AAED,MAAMkB,MAAM,GAAGrB,UAAU,CAAC+B,MAAX,CAAkB;AAC/BT,EAAAA,YAAY,EAAE;AACZU,IAAAA,iBAAiB,EAAE;AADP,GADiB;AAI/BR,EAAAA,GAAG,EAAE;AACHS,IAAAA,IAAI,EAAE,CADH;AAEHC,IAAAA,UAAU,EAAE,QAFT;AAGHC,IAAAA,cAAc,EAAE,QAHb;AAIHV,IAAAA,eAAe,EAAE;AAJd,GAJ0B;AAU/BK,EAAAA,SAAS,EAAE;AACTX,IAAAA,KAAK,EAAE,OADE;AAETiB,IAAAA,UAAU,EAAE;AAFH;AAVoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\n\nexport interface LevelBarProps {\n  level: number,\n  colors: Array<string>,\n  height: number,\n  style: object\n}\n\nexport default function LevelBar(props: LevelBarProps) {\n  const { level = 1, colors = ['#C3C9CE', '#86939E', '#74828F', '#687480', '#4D6071'], height = 24, style } = props\n\n  const container = React.useRef()\n\n  const [barWidth, setBarWidth] = React.useState(0)\n\n  return (\n    <View ref={container} style={{ flexDirection: 'row', width: '100%', ...props.style }} onLayout={() => {\n      container.current.measure((x, y, width, height) => {\n        setBarWidth(width)\n      })\n    }}>\n      { colors.map((color, index) => (\n        <View key={index} style={[styles.barContainer, { width: barWidth/colors.length, height }]}>\n          <View\n            style={[\n              styles.bar, \n              index < level ? { backgroundColor: color } : null,\n              { \n                borderTopLeftRadius: index === 0 ? 10 : 0, \n                borderBottomLeftRadius: index === 0 ? 10 : 0,\n                borderTopRightRadius: index === colors.length - 1 ?  10 : 0, \n                borderBottomRightRadius: index === colors.length - 1 ? 10 : 0 \n              }\n            ]}\n          >\n            { index === level - 1 &&\n              <Text style={styles.levelText}>{level}</Text>\n            }\n          </View>\n        </View>\n      ))\n      }\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  barContainer: {\n    paddingHorizontal: 1.5\n  },\n  bar: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#F1F1F1'\n  },\n  levelText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n})"]}
{"version":3,"sources":["level-bar.tsx"],"names":["React","View","Text","StyleSheet","palette","LevelBar","props","level","colors","blue_100","blue_200","blue_300","blue_400","blue_500","height","borderRadius","style","container","useRef","barWidth","setBarWidth","useState","flexDirection","flex","current","measure","x","y","width","map","color","index","styles","barContainer","length","bar","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","levelText","create","paddingHorizontal","alignItems","justifyContent","gray_100","white","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { palette } from './colors'\n\nexport interface LevelBarProps {\n  level: number,\n  colors: Array<string>,\n  height?: number,\n  borderRadius?: number,\n  style: object\n}\n\nexport default function LevelBar(props: LevelBarProps) {\n  const { \n    level = 1, \n    colors = [palette.blue_100, palette.blue_200, palette.blue_300, palette.blue_400, palette.blue_500], \n    height = 24,\n    borderRadius = 10, \n    style } = props\n\n  const container = React.useRef()\n\n  const [barWidth, setBarWidth] = React.useState(0)\n\n  return (\n    <View ref={container} style={{ flexDirection: 'row', flex: 1, ...props.style }} onLayout={() => {\n      container.current.measure((x, y, width, height) => {\n        setBarWidth(width)\n      })\n    }}>\n      { colors.map((color, index) => (\n        <View key={index} style={[styles.barContainer, { width: barWidth/colors.length, height }]}>\n          <View\n            style={[\n              styles.bar, \n              index < level ? { backgroundColor: color } : null,\n              { \n                borderTopLeftRadius: index === 0 ? borderRadius : 0, \n                borderBottomLeftRadius: index === 0 ? borderRadius : 0,\n                borderTopRightRadius: index === colors.length - 1 ?  borderRadius : 0, \n                borderBottomRightRadius: index === colors.length - 1 ? borderRadius : 0 \n              }\n            ]}\n          >\n            { index === level - 1 &&\n              <Text style={styles.levelText}>{level}</Text>\n            }\n          </View>\n        </View>\n      ))\n      }\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  barContainer: {\n    paddingHorizontal: 1.5\n  },\n  bar: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: palette.gray_100\n  },\n  levelText: {\n    color: palette.white,\n    fontWeight: 'bold'\n  }\n})"]}